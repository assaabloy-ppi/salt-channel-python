from enum import Enum

from ..saltlib import SaltLib
from ..saltlib import BadEncryptedDataException, BadSignatureException
from ..channel import ByteChannel
from .packets import EncryptedPacket, TTPacket
from ..exceptions import BadPeer

import asyncio
from .encrypted_channel_v2_a import Role, NonceType, Nonce, EncryptedChannelV2A


class EncryptedChannelV2(EncryptedChannelV2A):
    
    def __init__(self, *args, **kwargs):
        super(EncryptedChannelV2, self).__init__(*args, **kwargs)
        self.loop = asyncio.new_event_loop()
    
    def read(self):
        return self.loop.run_until_complete(super().read())

    def write(self, message, *args):
        self.loop.run_until_complete(super().write(message, *args))
